##Lab02 CSE422
##Name: Farhan Akbor Khan
##ID: 20301230
##Section: 05



import math
import random

def Alpha_Beta(node, depth, Maimizingplayer, alpha, beta, max_negative_hp):
    if depth==0:
        return depth

    if Maimizingplayer:
        max_eval= -float("inf")
        for i in range(0, max_negative_hp):
            v = Alpha_Beta(i, depth + 1, False, alpha, beta, max_negative_hp)
            max_eval = max(max_eval, v)
            alpha = max(alpha, max_eval)
            if beta <= alpha:
                break

        return max_eval
    else:
        min_eval = float('inf')
        for j in range(max_negative_hp):
            v = Alpha_Beta(j, depth + 1, True, alpha, beta, max_negative_hp)
            bestval = min(min_eval, v)
            beta = min(beta, bestval)
            if beta <= alpha:
                break
        return min_eval

input1 = input("Please Enter your Student Id: ")
number_turns = int(input1[0])
in_hp = str(input1[-1]) +str(input1[-2])
in_hp=int(in_hp)
number_bullets = int(input1[2])


depth = 0
branches = 0


input2 = input("Minimum and Maximum value for the range of negative HP: ")



print(f"Depth and Branches ratios is {depth} : }")
print(f"Terminal States(Leaf Nodes) are {','.join([str(random.randint()) for i in range( **)])}.")
print(f"Left life (HP) of the defender after maximum damage caused by the attacker is {}.")
print(f"After Alpha-beta pruning Leaf Node Comparisons {}.")